arbitrary length sequence of distinct generics aka
    S = typing.Tuple[A, B, C, D, ...]

such that it can be used
    T = typing.Tuple[
        typing.Callable[[A], X],
        typing.Callable[[B], X],
        typing.Callable[[B], X],
        typing.Callable[[D], X],
        ...
    ]

for a function of the form
    def transform(items: S, transforms: T, accumulator: typing.Callable[[typing.Iterable[X]], Y]) -> Y:
        ...


possible solution?
chain of items
tuple[T, Optional[chain[T]]]
